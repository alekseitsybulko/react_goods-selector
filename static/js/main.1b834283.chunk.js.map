{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","clearList","setState","addGood","good","removeGood","goodToRemove","indexOf","newGoods","splice","this","className","length","join","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAOMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,UAAY,WACV,EAAKC,SAAS,CACZF,aAAc,M,EAIlBG,QAAU,SAACC,GACT,EAAKF,UAAS,SAACH,GAAD,MAAmB,CAC/BC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BI,S,EAI1CC,WAAa,SAACD,GACZ,IAAME,EAAe,EAAKP,MAAMC,aAAaO,QAAQH,GAErD,EAAKF,UAAS,SAACH,GACb,IAAMS,EAAQ,YAAOT,EAAMC,cAI3B,OAFAQ,EAASC,OAAOH,EAAc,GAEvB,CACLN,aAAcQ,O,4CAKpB,WAAU,IAAD,OACCR,EAAiBU,KAAKX,MAAtBC,aAER,OACE,sBAAKW,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACIX,EAAaY,OAAd,UAEMZ,EAAaa,KAAK,MAFxB,YAEiCb,EAAaY,OAAS,EAAI,OAAS,MAFpE,aACG,sBAGN,wBACEE,KAAK,SACLH,UAAU,eACVI,QAASL,KAAKT,UAHhB,wBAOA,oBAAIU,UAAU,QAAd,SACGd,EAAgBmB,KAAI,SAAAZ,GACnB,OACE,qBACEO,UAAU,cADZ,UAIGP,EACD,wBACEU,KAAK,SACLH,UAAU,SACVI,QAAS,WACP,OAAOf,EAAaiB,SAASb,GACzB,EAAKC,WAAWD,GAChB,EAAKD,QAAQC,IANrB,SASGJ,EAAaiB,SAASb,GAAQ,SAAW,UAZvCA,e,GArDHc,IAAMC,WA4ETrB,IC7FfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b834283.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  selectedGood: [string];\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  clearList = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  addGood = (good: string) => {\n    this.setState((state: State) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    const goodToRemove = this.state.selectedGood.indexOf(good);\n\n    this.setState((state: State) => {\n      const newGoods = [...state.selectedGood];\n\n      newGoods.splice(goodToRemove, 1);\n\n      return {\n        selectedGood: newGoods,\n      };\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"Title\">\n          {!selectedGood.length\n            ? 'No goods selected'\n            : `${selectedGood.join(', ')} ${selectedGood.length > 1 ? 'are ' : 'is '} selected`}\n        </h1>\n        <button\n          type=\"button\"\n          className=\"clear-button\"\n          onClick={this.clearList}\n        >\n          Clear list\n        </button>\n        <ul className=\"goods\">\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                className=\"goods__list\"\n                key={good}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    return selectedGood.includes(good)\n                      ? this.removeGood(good)\n                      : this.addGood(good);\n                  }}\n                >\n                  {selectedGood.includes(good) ? 'Remove' : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}